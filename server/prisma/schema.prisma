generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  userId            Int       @id @default(autoincrement())
  userName          String    @unique
  userPwd           String
  accountDate       DateTime  @default(now())
  userProfileImg    String?
  userProfileBanner String?
  userBio           String?
  userStatus        STATUS    @default(ONLINE)
  members           GroupMembers[]
  Events            Events[]  @relation("UserEvents")
}

model Map {
  mapId       Int      @id @default(autoincrement())
  mapUserName String   
  mapLong     Float
  mapLat      Float
  createTime  DateTime @default(now())
  message     String?
  status      MAPSTATUS @default(ACTIVE)
}

model Groups {
  groupId      Int      @id @default(autoincrement())
  groupName    String
  groupInfo    String
  groupImg     String
  members      GroupMembers[]
  groupEvents  Events[] @relation("GroupEvents")
}

model Events {
  eventId       Int       @id @default(autoincrement())
  eventHost     String
  eventName     String
  eventInfo     String
  eventDate     String
  eventImg      String
  eventLocation String
  eventLength   Int
  eventUsers    Users[]   @relation("UserEvents")
  eventGroups   Groups[]  @relation("GroupEvents")
}

model GroupMembers {
  user     Users   @relation(fields: [userId], references: [userId])
  userId   Int
  group    Groups  @relation(fields: [groupId], references: [groupId])
  groupId  Int
  rank     RANK    @default(MEMBER)
  @@id([userId, groupId])
}

enum STATUS {
  ONLINE
  BUSY
  DND
  OFFLINE
}

enum RANK {
  ADMIN
  MEMBER
}

enum MAPSTATUS {
  ACTIVE
  PAST
}